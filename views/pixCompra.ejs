<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <link rel="shortcut icon" type="image/png" href="/img/logo.png" />
  <title>Pagamento via PIX - PetMania</title>
  <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
   <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      background-image: url("img/fundo.jpg");
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
    }

    header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      background: blur(10px);
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      padding: 0.5rem 0;
    }

    nav.container {
      max-width: 1100px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 2rem;
    }

    .logo {
      font-family: 'Playfair Display', serif;
      font-size: 1.8rem;
      font-weight: 700;
      color: #fff;
      text-decoration: none;
      letter-spacing: 1px;
      transition: color 0.3s;
    }

    .nav-links {
      display: flex;
      list-style: none;
      gap: 2rem;
    }

    .nav-links li {
      display: flex;
      align-items: center;
    }

    .nav-links a {
      color: #fff;
      text-decoration: none;
      font-weight: 500;
      font-size: 1rem;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      transition: background 0.2s, color 0.2s;
      position: relative;
      overflow: hidden;
    }

    .nav-links a::after {
      content: "";
      display: block;
      position: absolute;
      left: 0;
      bottom: 0;
      width: 0;
      height: 2px;
      background: #fff;
      transition: width 0.3s;
    }

    .nav-links a:hover::after,
    .nav-links a.active::after {
      width: 100%;
    }

    .nav-links a:hover,
    .nav-links a.active {
      background: none;
      color: #fff;
    }

    .menu-toggle {
      display: none;
      cursor: pointer;
      font-size: 2rem;
      color: #fff;
      margin-left: 1rem;
      user-select: none;
    }

    @media (max-width: 800px) {
      nav.container {
      flex-direction: column;
      align-items: flex-start;
      padding: 0 1rem;
      }
      .menu-toggle {
      display: block;
      }
      .nav-links {
      flex-direction: column;
      width: 100%;
      background: rgba(0,0,0,0.95);
      position: absolute;
      top: 60px;
      left: 0;
      padding: 1rem 0;
      gap: 0;
      display: none;
      }
      .nav-links.open {
      display: flex;
      }
      .nav-links li {
      width: 100%;
      justify-content: center;
      }
      .nav-links a {
      width: 90%;
      text-align: center;
      margin: 0.5rem 0;
      }
    }

    section {
      position: relative;
      max-width: 400px;
      background-color: transparent;
      border: 2px solid rgba(255, 255, 255, 0.5);
      border-radius: 20px;
      backdrop-filter: blur(55px);
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 2rem 3rem;
      flex-direction: column;
      margin-top: 100px;
    }

    h1 {
      font-size: 2rem;
      color: #fff;
      text-align: center;
      margin-bottom: 1rem;
    }

    .inputbox {
      position: relative;
      margin: 20px 0;
      max-width: 310px;
      border-bottom: 2px solid #fff;
    }

    .inputbox label {
      position: absolute;
      top: 50%;
      left: 5px;
      transform: translateY(-50%);
      color: #fff;
      font-size: 1rem;
      pointer-events: none;
      transition: all 0.5s ease-in-out;
    }

    input:focus ~ label,
    input:valid ~ label {
      top: -5px;
    }

    .inputbox input {
      width: 100%;
      height: 50px;
      background: transparent;
      border: none;
      outline: none;
      font-size: 1rem;
      padding: 0 35px 0 5px;
      color: #fff;
    }

    .inputbox ion-icon {
      position: absolute;
      right: 8px;
      color: #fff;
      font-size: 1.2rem;
      top: 15px;
    }

    .pix-info,
    .copy-cola {
      margin-top: 20px;
      text-align: center;
      color: #fff;
      font-size: 0.9rem;
      word-wrap: break-word;
    }

    .pix-key,
    .payload {
      margin-top: 10px;
      padding: 10px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      color: #fff;
      font-size: 0.85rem;
      word-break: break-all;
    }

    .btn {
      margin-top: 10px;
      width: 100%;
      height: 40px;
      border-radius: 40px;
      background-color: rgba(255, 255, 255, 1);
      border: none;
      outline: none;
      cursor: pointer;
      font-size: 1rem;
      font-weight: 600;
      transition: all 0.4s ease;
      text-decoration: none;
      display: inline-block;
      text-align: center;
      line-height: 40px;
      color: #000;
    }

    .btn:hover {
      background-color: rgba(255, 255, 255, 0.5);
    }

    .qr-code {
      margin-top: 20px;
      text-align: center;
    }

    .qr-code img {
      width: 150px;
      height: 150px;
    }
  </style>
</head>
<body>
  <section>
    <form id="pixForm">
      <h1>Pagamento via PIX</h1>

      <div class="inputbox">
        <ion-icon name="person-outline"></ion-icon>
        <input type="text" id="nome" required>
        <label>Nome Completo</label>
      </div>

      <div class="inputbox">
        <ion-icon name="card-outline"></ion-icon>
        <input type="text" id="cpf" maxlength="14" required autocomplete="off" oninput="formatarCPF(this)">
        <label>CPF</label>
      </div>

      <div class="pix-info">
        <p>Chave PIX:</p>
        <div class="pix-key" id="pixKey">PetMania@gmail.com</div>
        <button type="button" class="btn" onclick="copyPixKey()">Copiar Chave</button>
      </div>

      <button type="button" class="btn" onclick="gerarQRCode()">Gerar QR Code PIX</button>

      <div class="qr-code" id="qrCodeArea" style="display: none;">
        <p>Escaneie o QR Code:</p>
        <img id="qrCodeImg" src="" alt="QR Code PIX">
      </div>

      <div class="copy-cola" id="copiaColaArea" style="display: none;">
        <p>Copia e Cola:</p>
        <div class="payload" id="payloadPix"></div>
        <button type="button" class="btn" onclick="copyPayload()">Copiar Copia e Cola</button>
      </div>
    </form>
  </section>

  <script>
    function copyPixKey() {
      const pixKey = document.getElementById("pixKey").innerText;
      navigator.clipboard.writeText(pixKey).then(() => {
        alert("Chave PIX copiada!");
      }).catch(err => {
        alert("Erro ao copiar: " + err);
      });
    }

    function copyPayload() {
      const payload = document.getElementById("payloadPix").innerText;
      navigator.clipboard.writeText(payload).then(() => {
        alert("Copia e Cola copiado!");
      }).catch(err => {
        alert("Erro ao copiar: " + err);
      });
    }

    function gerarQRCode() {
      const nome = document.getElementById('nome').value.trim();
      const cpf = document.getElementById('cpf').value.trim();
      const chavePix = document.getElementById('pixKey').innerText;

      if (!nome || !cpf) {
        alert('Preencha todos os campos!');
        return;
      }

      // Payload simplificado
      const payload = `PIX|Chave:${chavePix}|Nome:${nome}|CPF:${cpf}`;

      // Atualiza Copia e Cola
      document.getElementById('payloadPix').innerText = payload;
      document.getElementById('copiaColaArea').style.display = 'block';

      // Gera QR Code
      const url = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(payload)}`;
      document.getElementById('qrCodeImg').src = url;
      document.getElementById('qrCodeArea').style.display = 'block';
    }

    function formatarCPF(input) {
      let value = input.value.replace(/\D/g, ''); // remove tudo que não é número
      if (value.length > 11) value = value.slice(0, 11); // limita a 11 dígitos

      value = value.replace(/(\d{3})(\d)/, '$1.$2');
      value = value.replace(/(\d{3})(\d)/, '$1.$2');
      value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');

      input.value = value;
    }
  </script>
</body>
</html>
